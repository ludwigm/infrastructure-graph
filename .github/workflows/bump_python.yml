name: Bump version & tag release

on:
  workflow_dispatch:
    inputs:
      increment:
        description: 'major/minor/patch'
        required: true
        default: 'patch'

jobs:
  bump-version:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
        fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install
    - name: Output current version
      run: |
        poetry version
        version_old=$(poetry version | cut -d ' ' -f 2)
        echo "version_old: ${version_old}"
        echo "::set-env name=version_old::${version_old}"
    - name: Try a bump
      run: |
        poetry version ${{ github.event.inputs.increment }}
        version_new=$(poetry version | cut -d ' ' -f 2)
        echo "version_new: ${version_new}"
        echo "::set-env name=version_new::${version_new}"
    - name: Display result
      run: |
        git diff
        echo "${{env.version_old}} -> ${{env.version_new}}"
    # TODO protect for cases where no releases/tags exist yet
    - name: Display changelog
      run: |
        changelog=$(git --no-pager log --oneline --pretty=format:"* %s (%h)" v${{env.version_old}}..HEAD)
        echo "${changelog}"
        echo "::set-env name=changelog::${changelog}"
    # TODO investigate how to add multi-line tag messages here (e.g. via a temp file)
    - name: commit results
      run: |
        git add -u
        git config --global user.email "ci@github.com"
        git config --global user.name "CI/CD user"
        git commit -m "Bumping version ${{env.version_old}} -> ${{env.version_new}}"
        echo "${{env.changelog}}"
        git tag "v${{env.version_new}}"
    - name: push results
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GH_ACCESS_TOKEN_PRIVATE }}
        tags: true
